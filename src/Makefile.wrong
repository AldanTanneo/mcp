##**************************************************************************
##*                                                                        *
##*                                                                        *
##*	       Multiple Characterization Problem (MCP)                     *
##*                                                                        *
##*	Author:   Miki Hermann                                             *
##*	e-mail:   hermann@lix.polytechnique.fr                             *
##*	Address:  LIX (CNRS UMR 7161), Ecole Polytechnique, France         *
##*                                                                        *
##*	Author: Gernot Salzer                                              *
##*	e-mail: gernot.salzer@tuwien.ac.at                                 *
##*	Address: Technische Universitaet Wien, Vienna, Austria             *
##*                                                                        *
##*	Version: all                                                       *
##*     File:    src/Makefile                                              *
##*                                                                        *
##*      Copyright (c) 2019 - 2023                                         *
##*                                                                        *
##* Given several  Boolean matrices  representing the  presence/absence of *
##* attributes in  observations, this software generates  Horn, dual Horn, *
##* or bijunctive formulas from positive and negative examples represented *
##* by these matrices.                                                     *
##*                                                                        *
##* This software has been created within the ACCA Project.                *
##*                                                                        *
##*                                                                        *
##**************************************************************************

BIN = ../bin

.PHONY: compile compile-no-mpi seq export clean scratch uniq

compile: seq mpi pthread hybrid trans guess cnf split check sparse \
	predict chk2tst uniq

compile-no-mpi: seq pthread trans guess cnf split check sparse predict \
	chk2tst uniq

#---------------------------------------------------------------------------------------------------

seq: mcp-matrix+formula.o mcp-common.o seq.o
	g++ -O4 -o $(BIN)/mcp-seq mcp-seq.o \
				  mcp-common.o \
				  mcp-matrix+formula.o

seq.o: mcp-seq.cpp mcp-common.hpp
	g++ -O4 -c -o mcp-seq.o mcp-seq.cpp

mcp-common.o: mcp-common.cpp mcp-common.hpp
	g++ -O4 -c -o mcp-common.o mcp-common.cpp

mcp-matrix+formula.o: mcp-matrix+formula.cpp mcp-matrix+formula.hpp
	g++ -O4 -c -o mcp-matrix+formula.o mcp-matrix+formula.cpp

#---------------------------------------------------------------------------------------------------

mpi: mcp-matrix+formula.o mcp-common.o mcp-parallel.o mcp-mpi.o
	mpic++ -O4 -o $(BIN)/mcp-mpi mcp-mpi.o \
				     mcp-common.o \
				     mcp-matrix+formula.o \
				     mcp-parallel.o

mcp-mpi.o: mcp-mpi.cpp mcp-common.hpp mcp-parallel.hpp
	mpic++ -O4 -c -o mcp-mpi.o mcp-mpi.cpp

mcp-parallel.o: mcp-parallel.cpp mcp-parallel.hpp mcp-common.hpp
	g++ -O4 -c -o mcp-parallel.o mcp-parallel.cpp

#---------------------------------------------------------------------------------------------------

pthread: mcp-matrix+formula.o mcp-common.o mcp-parallel.o mcp-posix.o mcp-pthread.o
	g++ -pthread -O4 -o $(BIN)/mcp-pthread mcp-pthread.o \
					       mcp-common.o \
					       mcp-matrix+formula.o \
					       mcp-parallel.o \
					       mcp-posix.o

mcp-pthread.o: mcp-pthread.cpp mcp-common.hpp mcp-parallel.hpp mcp-posix.hpp
	g++ -pthread -c -O4 -o mcp-pthread.o mcp-pthread.cpp

mcp-posix.o: mcp-posix.cpp mcp-posix.hpp mcp-parallel.hpp mcp-common.hpp
	g++ -pthread -c -O4 -o mcp-posix.o mcp-posix.cpp

#---------------------------------------------------------------------------------------------------

hybrid: mcp-matrix+formula.o mcp-common.o mcp-parallel.o mcp-posix.o mcp-hybrid.o
	mpic++ -pthread -O4 -o $(BIN)/mcp-hybrid mcp-hybrid.o \
						 mcp-common.o \
					         mcp-matrix+formula.o \
						 mcp-parallel.o \
						 mcp-posix.o

mcp-hybrid.o: mcp-hybrid.cpp mcp-common.hpp mcp-parallel.hpp mcp-posix.hpp
	mpic++ -pthread -O4 -c -o mcp-hybrid.o mcp-hybrid.cpp

#---------------------------------------------------------------------------------------------------

trans: mcp-trans.cpp mcp-matrix+formula.o
	g++ -O4 -o $(BIN)/mcp-trans mcp-trans.cpp mcp-matrix+formula.o

#---------------------------------------------------------------------------------------------------

guess: mcp-guess.cpp
	g++ -O4 -o $(BIN)/mcp-guess mcp-guess.cpp

#---------------------------------------------------------------------------------------------------

cnf: mcp-cnf
	cp -f mcp-cnf $(BIN)/mcp-cnf

#---------------------------------------------------------------------------------------------------

split: mcp-split.cpp
	g++ -O4 -o $(BIN)/mcp-split mcp-split.cpp

#---------------------------------------------------------------------------------------------------

check:  mcp-matrix+formula.o mcp-check.o
	g++ -O4 -o $(BIN)/mcp-check mcp-check.o \
				    mcp-matrix+formula.o

mcp-check.o: mcp-check.cpp mcp-matrix+formula.hpp
	g++ -O4 -c -o mcp-check.o mcp-check.cpp

#---------------------------------------------------------------------------------------------------

sparse: mcp-matrix+formula.o mcp-sparse.o
	g++ -O4 -o $(BIN)/mcp-sparse mcp-sparse.o \
				   mcp-matrix+formula.o

mcp-sparse.o: mcp-sparse.cpp mcp-matrix+formula.hpp
	g++ -O4 -c -o mcp-sparse.o mcp-sparse.cpp

#---------------------------------------------------------------------------------------------------

predict: mcp-matrix+formula.o mcp-predict.o
	g++ -O4 -o $(BIN)/mcp-predict mcp-predict.o \
				    mcp-matrix+formula.o

mcp-predict.o: mcp-predict.cpp mcp-matrix+formula.hpp
	g++ -O4 -c -o mcp-predict.o mcp-predict.cpp

#---------------------------------------------------------------------------------------------------

chk2tst: mcp-matrix+formula.o mcp-chk2tst.o
	g++ -O4 -o $(BIN)/mcp-chk2tst mcp-chk2tst.o \
				    mcp-matrix+formula.o

mcp-chk2tst.o: mcp-chk2tst.cpp mcp-matrix+formula.hpp
	g++ -O4 -c -o mcp-chk2tst.o mcp-chk2tst.cpp

#---------------------------------------------------------------------------------------------------

uniq: mcp-matrix+formula.o mcp-uniq.o
	g++ -O4 -o $(BIN)/mcp-uniq mcp-uniq.o \
			mcp-matrix+formula.o

mcp-uniq.o: mcp-uniq.cpp mcp-matrix+formula.hpp
	g++ -O4 -c -o mcp-uniq.o mcp-uniq.cpp

#---------------------------------------------------------------------------------------------------

export:
	cp -f $(BIN)/mcp-* ..

clean:
	rm -f *.o $(BIN)/mcp-*

scratch: clean
	rm -f *~

#---------------------------------------------------------------------------------------------------
# EOF
