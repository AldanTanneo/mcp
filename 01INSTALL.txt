MULTI-CHARACTERIZATION PROBLEM (MCP) v1.04
==========================================

Table of contents
=================

0. Compiling the sources
   0.1 Sequential version
   0.2 Parallel version with POSIX threads
   0.3 Parallel version with MPI
   0.4 Parallel hybrid version
1. Installing the binaries
2. Testing the binaries
3. Producing listings of the sources
4. Structure of the distribution



0. Compiling the sources
========================

0.1 Sequential version
----------------------

If, for any reason, you decide to recompile the source C++ code for
your computer architecture, you need a g++ compiler satisfying at
least the C++11 standard. The sequential version will not compile by a
g++ compiler satisfying only older standards than C++11.

The sequential version is in the file "mcp-seq.cpp" in the direstory
src/ and is compiled by the command

	# make seq

0.2 Parallel version with pthreads
----------------------------------

You need a g++ compiler satisfying the standard C++17. If you have
only a compiler satisfying the C++11 standard, you need to replace the
"remove" command by an appropriate system call. The POSIX thread
version will not compile by a g++ compiler satisfying only older
standards than C++11.

The version with parallel threads is in the file "mcp-pthread.cpp" in
the directory src/ and is compiled by the command

	# make pthread

0.3 Parallel version with MPI
-----------------------------

You need to have MPI installed first. You need a mpic++ compiler
satisfying the standard C++17. If you have only a compiler satisfying
only the C++11 standard, you need (1) to replace the "remove" command
by an appropriate system call and (2) to replace the smart pointer in
main() by the explicit allocation of memory (previous commented line),
as well as uncomment the subsequent "delete" line. The MPI version
will not compile by a mpic++ compiler satisfying only older standards
than C++11.

The version with MPI is in the file "mcp-mpi.cpp" in the directory
src/ and is compiled by the command

	# make mpi

0.4 Parallel hybrid version
---------------------------

The restrictions from the MPI version apply here, too.

The version with MPI is in the file "mcp-hybrid.cpp" in the directory
src/ and is compiled by the command

	# make hybrid



1. Installing the binaries
==========================

The binaries are stored in the directory bin/ and are copied into the
top directory by the command

	# make install

from the directory src/.



2. Testing the binaries
=======================

The produced binaries can be tested by shell scripts in the testing/
directory. They can be invoked through a Makefile. Test of the whole
installation can be invoked by the command

	# make

You can use the commands

	# make seq
	# make mpi
	# make pthread
	# make hybrid
	# make big

to test the sequential, the parallel with MPI, the parallel with POSIX
threads, and the hybrid (with both MPI + POSIX threads) versions,
respectively. 

Results of the testing runs are stored in the directory results/.  The
matrices of the tested examples are stored in the directory
mat/. Directory crash/ contains the crash report from the texted
examples. Directory time/ contains the list f execution times for
exemples needding more than 1 second to execute. Only the example
invoked by the command "make big" needs more than 1 second to finish.



3. Listings of the sources
==========================

Readable and colorful listings of MCP sources can be produced from
LaTeX files in the listing/ directory. Listings for all version can me
produced by the command

	# make

The commands

	# make seq
	# make mpi
	# make pthread
	# make hybrid

produce listings of the corresponding version of MCP. Command

	# make clean

erases the files *.aux and *.log. The command

	# make scratch

erases the files *.aux, *.log, and *.pdf.



4. Structure of the distribution
================================

top directory
    |
    |
    +------- 00README.txt
    |	     Text file describing the use of the MCP software.
    |
    +------- 01INSTALL.txt
    |  	     This text file.
    |
    +------- archive
    |  	     Directory containing old and previous versions of the
    |	     sources.
    |
    +------- bin
    |	     Directory containing the binaries produced after
    |	     linking. They are copied to the top directory by the
    |	     command "make install". Is emptied by the command "make
    |	     scratch" invoked in the src/ directory.
    |
    +------- crash
    |	     Directory containing the crash reports from testing. Is
    |	     emptied by the commands "make clean" and "make scratch"
    |	     invoked in the testing/ directory.
    |
    +------- dist
    | 	     Directory containing the the distribution of the
    |	     software, but is usually empty.
    |
    +------- listing
    |  	     Directory containing the LaTeX files for producing the
    |	     listings of the sources.
    |
    +------- ls
    |  	     Support directory for testing. Contains the names of the
    |	     produced files in the results/ directory. Is emptied by
    |        the commands "make clean" and "make scratch" invoked in
    |        the testing/ directory.
    |
    +------- mat
    |  	     Directory containing the matrices of the examples for
    |	     testing.
    |
    +------- obj
    |  	     Directory containing the objective iles after
    |	     compiling. Is emptied by the commands "make clean" and
    |	     "make scratch" invoked in the src/ directory.
    |
    +------- results
    |  	     Directory containing the results of the testing runs. Is
    |	     emptied by the commands "make clean" and "make scratch"
    |	     invoked in the testing/ directory.
    |
    +------- src
    |  	     Directory containing the sources of the MCP software.
    |
    +------- test
    |  	     Directory containing results of some test runs.
    |
    +------- testing
    |  	     Directory containing the shell and Per scripts for
    |	     testing the examples in mat/ directory.
    |
    +------- time
    |  	     Directory containing the execution times of 1 second or
    |	     more of examples from mat/ directory. Is emptied by the
    |        commands "make clean" and "make scratch" invoked from the
    |        testing/ directory. 
    |
    +------- zip
    |  	     Directory containing the *.zip files produced after
    |	     testing the examples. Is emptied by the commands "make
    |	     clean" and "make scratch" invoked from the testing/
    |	     directory.
    |
    @

EOF
